{"remainingRequest":"/home/xzed/Desktop/vuesaxadmin-32/vuesax-admin-v3.2/vuesax-vuejs-admin-template/vuesax-vuejs-admin-template/vuesax-admin-v3.2/node_modules/vue-loader/lib/loaders/templateLoader.js??vue-loader-options!/home/xzed/Desktop/vuesaxadmin-32/vuesax-admin-v3.2/vuesax-vuejs-admin-template/vuesax-vuejs-admin-template/vuesax-admin-v3.2/node_modules/cache-loader/dist/cjs.js??ref--0-0!/home/xzed/Desktop/vuesaxadmin-32/vuesax-admin-v3.2/vuesax-vuejs-admin-template/vuesax-vuejs-admin-template/vuesax-admin-v3.2/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/xzed/Desktop/vuesaxadmin-32/vuesax-admin-v3.2/vuesax-vuejs-admin-template/vuesax-vuejs-admin-template/vuesax-admin-v3.2/src/views/ui-elements/data-list/list-view/DataListListView.vue?vue&type=template&id=3a70916d&","dependencies":[{"path":"/home/xzed/Desktop/vuesaxadmin-32/vuesax-admin-v3.2/vuesax-vuejs-admin-template/vuesax-vuejs-admin-template/vuesax-admin-v3.2/src/views/ui-elements/data-list/list-view/DataListListView.vue","mtime":1626595023812},{"path":"/home/xzed/Desktop/vuesaxadmin-32/vuesax-admin-v3.2/vuesax-vuejs-admin-template/vuesax-vuejs-admin-template/vuesax-admin-v3.2/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/xzed/Desktop/vuesaxadmin-32/vuesax-admin-v3.2/vuesax-vuejs-admin-template/vuesax-vuejs-admin-template/vuesax-admin-v3.2/node_modules/vue-loader/lib/loaders/templateLoader.js","mtime":499162500000},{"path":"/home/xzed/Desktop/vuesaxadmin-32/vuesax-admin-v3.2/vuesax-vuejs-admin-template/vuesax-vuejs-admin-template/vuesax-admin-v3.2/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/xzed/Desktop/vuesaxadmin-32/vuesax-admin-v3.2/vuesax-vuejs-admin-template/vuesax-vuejs-admin-template/vuesax-admin-v3.2/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["var render = function() {\n  var _vm = this\n  var _h = _vm.$createElement\n  var _c = _vm._self._c || _h\n  return _c(\n    \"div\",\n    {\n      staticClass: \"data-list-container\",\n      attrs: { id: \"data-list-list-view\" }\n    },\n    [\n      _c(\"add-new-data-sidebar\", {\n        attrs: { isSidebarActive: _vm.addNewDataSidebar },\n        on: {\n          closeSidebar: function($event) {\n            _vm.addNewDataSidebar = false\n          }\n        }\n      }),\n      _c(\n        \"vs-table\",\n        {\n          ref: \"table\",\n          attrs: {\n            multiple: \"\",\n            pagination: \"\",\n            \"max-items\": _vm.itemsPerPage,\n            search: \"\",\n            data: _vm.users\n          },\n          scopedSlots: _vm._u([\n            {\n              key: \"default\",\n              fn: function(ref) {\n                var data = ref.data\n                return [\n                  _c(\n                    \"tbody\",\n                    _vm._l(data, function(tr, indextr) {\n                      return _c(\n                        \"vs-tr\",\n                        [\n                          _c(\"vs-td\", [\n                            _c(\n                              \"p\",\n                              { staticClass: \"product-name font-medium\" },\n                              [\n                                _vm._v(\n                                  \"\\n              \" +\n                                    _vm._s(tr.productCode.toUpperCase()) +\n                                    \"\\n            \"\n                                )\n                              ]\n                            )\n                          ]),\n                          _c(\n                            \"vs-td\",\n                            [\n                              _c(\n                                \"vs-button\",\n                                {\n                                  attrs: { color: \"primary\", type: \"border\" },\n                                  on: {\n                                    click: function($event) {\n                                      return _vm.setProductKey(tr.productCode)\n                                    }\n                                  }\n                                },\n                                [_vm._v(\"Fund\")]\n                              )\n                            ],\n                            1\n                          )\n                        ],\n                        1\n                      )\n                    }),\n                    1\n                  )\n                ]\n              }\n            }\n          ]),\n          model: {\n            value: _vm.selected,\n            callback: function($$v) {\n              _vm.selected = $$v\n            },\n            expression: \"selected\"\n          }\n        },\n        [\n          _c(\n            \"template\",\n            { slot: \"thead\" },\n            [\n              _c(\"vs-th\", { attrs: { \"sort-key\": \"name\" } }, [\n                _vm._v(\"Product ID\")\n              ]),\n              _c(\"vs-th\", { attrs: { \"sort-key\": \"order_status\" } }, [\n                _vm._v(\"Action\")\n              ])\n            ],\n            1\n          )\n        ],\n        2\n      ),\n      _c(\n        \"vs-popup\",\n        {\n          attrs: {\n            classContent: \"popup-example\",\n            title: \"Yoda Box Auto Top Up\",\n            active: _vm.popupActive2\n          },\n          on: {\n            \"update:active\": function($event) {\n              _vm.popupActive2 = $event\n            }\n          }\n        },\n        [\n          _c(\n            \"center\",\n            [\n              _c(\"h4\", [\n                _vm._v(\n                  \"User Product Code : \" + _vm._s(_vm.productID.toUpperCase())\n                )\n              ]),\n              _c(\"br\"),\n              _c(\"vs-input\", {\n                staticClass: \"inputx mb-3\",\n                attrs: { placeholder: \"Email Address\", type: \"email\" },\n                model: {\n                  value: _vm.email,\n                  callback: function($$v) {\n                    _vm.email = $$v\n                  },\n                  expression: \"email\"\n                }\n              }),\n              _c(\"vs-input\", {\n                staticClass: \"inputx mb-3\",\n                attrs: { placeholder: \"Phone\", type: \"text\" },\n                model: {\n                  value: _vm.phone,\n                  callback: function($$v) {\n                    _vm.phone = $$v\n                  },\n                  expression: \"phone\"\n                }\n              }),\n              _c(\"vs-input\", {\n                staticClass: \"inputx mb-3\",\n                attrs: { placeholder: \"Amount\", type: \"number\" },\n                model: {\n                  value: _vm.amount,\n                  callback: function($$v) {\n                    _vm.amount = $$v\n                  },\n                  expression: \"amount\"\n                }\n              }),\n              _c(\n                \"vs-button\",\n                {\n                  attrs: { color: \"primary\", type: \"filled\" },\n                  on: {\n                    click: function($event) {\n                      return _vm.topUpUser()\n                    }\n                  }\n                },\n                [_vm._v(\"Top Up User Wallet\")]\n              )\n            ],\n            1\n          )\n        ],\n        1\n      )\n    ],\n    1\n  )\n}\nvar staticRenderFns = []\nrender._withStripped = true\n\nexport { render, staticRenderFns }"]}