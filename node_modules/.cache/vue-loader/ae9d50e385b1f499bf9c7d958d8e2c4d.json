{"remainingRequest":"/home/xzed/Desktop/vuesaxadmin-32/vuesax-admin-v3.2/vuesax-vuejs-admin-template/vuesax-vuejs-admin-template/vuesax-admin-v3.2/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/xzed/Desktop/vuesaxadmin-32/vuesax-admin-v3.2/vuesax-vuejs-admin-template/vuesax-vuejs-admin-template/vuesax-admin-v3.2/src/views/ui-elements/data-list/list-view/DataListListView.vue?vue&type=script&lang=js&","dependencies":[{"path":"/home/xzed/Desktop/vuesaxadmin-32/vuesax-admin-v3.2/vuesax-vuejs-admin-template/vuesax-vuejs-admin-template/vuesax-admin-v3.2/src/views/ui-elements/data-list/list-view/DataListListView.vue","mtime":1626625578330},{"path":"/home/xzed/Desktop/vuesaxadmin-32/vuesax-admin-v3.2/vuesax-vuejs-admin-template/vuesax-vuejs-admin-template/vuesax-admin-v3.2/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/xzed/Desktop/vuesaxadmin-32/vuesax-admin-v3.2/vuesax-vuejs-admin-template/vuesax-vuejs-admin-template/vuesax-admin-v3.2/node_modules/@vue/cli-plugin-babel/node_modules/babel-loader/lib/index.js","mtime":315532800000},{"path":"/home/xzed/Desktop/vuesaxadmin-32/vuesax-admin-v3.2/vuesax-vuejs-admin-template/vuesax-vuejs-admin-template/vuesax-admin-v3.2/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/xzed/Desktop/vuesaxadmin-32/vuesax-admin-v3.2/vuesax-vuejs-admin-template/vuesax-vuejs-admin-template/vuesax-admin-v3.2/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\nimport AddNewDataSidebar from \"../AddNewDataSidebar.vue\";\nimport firebase from \"firebase/app\";\nimport \"firebase/firestore\";\n\nimport useVuelidate from \"@vuelidate/core\";\nimport { required, email, minLength, sameAs } from \"@vuelidate/validators\";\n\nexport function validName(name) {\n  let validNamePattern = new RegExp(\"^[a-zA-Z]+(?:[-'\\\\s][a-zA-Z]+)*$\");\n  if (validNamePattern.test(name)) {\n    return true;\n  }\n  return false;\n}\n\nexport default {\n  setup() {\n    return { v$: useVuelidate() };\n  },\n\n  components: {\n    AddNewDataSidebar,\n  },\n  data() {\n    return {\n      selected: [],\n      users: [],\n      itemsPerPage: 50,\n      isMounted: false,\n      addNewDataSidebar: false,\n      form: {\n        email: \"\",\n        phone: \"\",\n        amount: \"\",\n      },\n      productID: \"\",\n      popupActive2: false,\n      popupActive3: false,\n    };\n  },\n  validations() {\n    return {\n      form: {\n        email: { required, email },\n        phone: { required },\n        amount: { required },\n      },\n    };\n  },\n  computed: {\n    currentPage() {\n      if (this.isMounted) {\n        return this.$refs.table.currentx;\n      }\n      return 0;\n    },\n  },\n  methods: {\n    formatData(data) {\n      // formats data received from API\n      let formattedData = data.map((item) => {\n        const fields = item.data().fields;\n        let obj = {};\n        obj[\"id\"] = item.id;\n        obj[\"productCode\"] = item.data().productCode;\n\n        return obj;\n      });\n      return formattedData;\n    },\n\n    setProductKey(key) {\n      this.productID = key;\n      this.popupActive2 = true;\n    },\n\n    resetForm() {\n      firebase\n        .firestore()\n        .collection(\"RecentTopUp\")\n        .doc(this.productID)\n        .set({\n          balance: parseInt(this.form.amount),\n          email: this.form.email,\n          fullName: \"\",\n          productCode: this.productID,\n          subscriptions: [],\n        });\n      this.popupActive2 = false;\n      this.form.email = \"\";\n      this.form.phone = \"\";\n      this.form.amount = \"\";\n    },\n\n    topUpUser() {\n      firebase\n        .firestore()\n        .collection(\"AutoTopUp\")\n        .doc(this.productID)\n        .set({\n          balance: parseInt(this.form.amount),\n          email: this.form.email,\n          fullName: \"\",\n          productCode: this.productID,\n          subscriptions: [],\n        })\n        .then((_) => {\n          this.$http\n            .post(\"https://yodaboxotp-7kvy5dvszq-uc.a.run.app/notify\", {\n              amount: this.form.amount,\n              email: this.form.email,\n            })\n            .then((_) => {\n              this.$vs.notify({\n                title: \"Top Up Success\",\n                text: \"User account has been funded the user has been notified!\",\n                iconPack: \"feather\",\n                icon: \"icon-alert-circle\",\n                color: \"success\",\n              });\n\n              this.resetForm();\n            })\n            .catch((_) => {\n              this.$vs.notify({\n                title: \"Notification\",\n                text: \"Failed to top up user wallet\",\n                iconPack: \"feather\",\n                icon: \"icon-alert-circle\",\n                color: \"warning\",\n              });\n            });\n        });\n    },\n  },\n  created() {\n    const thisIns = this;\n    firebase\n      .firestore()\n      .collection(\"Users\")\n      .onSnapshot((querySnapshot) => {\n        thisIns.users = thisIns.formatData(querySnapshot.docs);\n      });\n  },\n  mounted() {\n    this.isMounted = true;\n  },\n};\n",{"version":3,"sources":["DataListListView.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAgfile":"DataListListView.vue","sourceRoot":"src/views/ui-elements/data-list/list-view","sourcesContent":["< !-- =========================================================================================\n  File Name: DataListListView.vue\nDescription: Data List - List View\n----------------------------------------------------------------------------------------\n  Item Name: Vuesax Admin - VueJS Dashboard Admin Template\nAuthor: Pixinvent\nAuthor URL: http://www.themeforest.net/user/pixinvent\n========================================================================================== -->\n\n<template>\n  <div id=\"data-list-list-view\" class=\"data-list-container\">\n    <add-new-data-sidebar\n      :isSidebarActive=\"addNewDataSidebar\"\n      @closeSidebar=\"addNewDataSidebar = false\"\n    />\n\n    <vs-table\n      ref=\"table\"\n      multiple\n      v-model=\"selected\"\n      pagination\n      :max-items=\"itemsPerPage\"\n      search\n      :data=\"users\"\n    >\n      <template slot=\"thead\">\n        <vs-th sort-key=\"name\">Product ID</vs-th>\n\n        <vs-th sort-key=\"order_status\">Action</vs-th>\n      </template>\n\n      <template slot-scope=\"{ data }\">\n        <tbody>\n          <vs-tr v-for=\"(tr, indextr) in data\">\n            <vs-td>\n              <p class=\"product-name font-medium\">\n                {{ tr.productCode.toUpperCase() }}\n              </p>\n            </vs-td>\n\n            <vs-td>\n              <vs-button\n                color=\"primary\"\n                @click=\"setProductKey(tr.productCode)\"\n                type=\"border\"\n                >Fund</vs-button\n              >\n            </vs-td>\n          </vs-tr>\n        </tbody>\n      </template>\n    </vs-table>\n\n    <vs-popup\n      classContent=\"popup-example\"\n      title=\"Yoda Box Auto Top Up\"\n      :active.sync=\"popupActive2\"\n    >\n      <center>\n        <h4>User Product Code : {{ productID.toUpperCase() }}</h4>\n        <br />\n        <form @submit.prevent=\"topUpUser()\">\n          <vs-input\n            class=\"inputx mb-3\"\n            placeholder=\"Email Address\"\n            v-model=\"v$.form.email.$model\"\n            type=\"email\"\n          />\n          <div\n            class=\"input-errors\"\n            v-for=\"(error, index) of v$.form.email.$errors\"\n            :key=\"index\"\n          >\n            <div class=\"error-msg\">{{ error.$message }}</div>\n          </div>\n          <vs-input\n            class=\"inputx mb-3\"\n            placeholder=\"Phone\"\n            v-model=\"v$.form.phone.$model\"\n            type=\"text\"\n          />\n          <div\n            class=\"input-errors\"\n            v-for=\"(error, index) of v$.form.phone.$errors\"\n            :key=\"index\"\n          >\n            <div class=\"error-msg\">{{ error.$message }}</div>\n          </div>\n          <vs-input\n            class=\"inputx mb-3\"\n            placeholder=\"Amount\"\n            v-model=\"v$.form.amount.$model\"\n            type=\"number\"\n          />\n          <div\n            class=\"input-errors\"\n            v-for=\"(error, index) of v$.form.amount.$errors\"\n            :key=\"index\"\n          >\n            <div class=\"error-msg\">{{ error.$message }}</div>\n          </div>\n\n          <vs-button :disabled=\"v$.form.$invalid\" color=\"primary\" type=\"filled\"\n            >Top Up User Wallet</vs-button\n          >\n        </form>\n      </center>\n    </vs-popup>\n  </div>\n</template>\n\n<script>\nimport AddNewDataSidebar from \"../AddNewDataSidebar.vue\";\nimport firebase from \"firebase/app\";\nimport \"firebase/firestore\";\n\nimport useVuelidate from \"@vuelidate/core\";\nimport { required, email, minLength, sameAs } from \"@vuelidate/validators\";\n\nexport function validName(name) {\n  let validNamePattern = new RegExp(\"^[a-zA-Z]+(?:[-'\\\\s][a-zA-Z]+)*$\");\n  if (validNamePattern.test(name)) {\n    return true;\n  }\n  return false;\n}\n\nexport default {\n  setup() {\n    return { v$: useVuelidate() };\n  },\n\n  components: {\n    AddNewDataSidebar,\n  },\n  data() {\n    return {\n      selected: [],\n      users: [],\n      itemsPerPage: 50,\n      isMounted: false,\n      addNewDataSidebar: false,\n      form: {\n        email: \"\",\n        phone: \"\",\n        amount: \"\",\n      },\n      productID: \"\",\n      popupActive2: false,\n      popupActive3: false,\n    };\n  },\n  validations() {\n    return {\n      form: {\n        email: { required, email },\n        phone: { required },\n        amount: { required },\n      },\n    };\n  },\n  computed: {\n    currentPage() {\n      if (this.isMounted) {\n        return this.$refs.table.currentx;\n      }\n      return 0;\n    },\n  },\n  methods: {\n    formatData(data) {\n      // formats data received from API\n      let formattedData = data.map((item) => {\n        const fields = item.data().fields;\n        let obj = {};\n        obj[\"id\"] = item.id;\n        obj[\"productCode\"] = item.data().productCode;\n\n        return obj;\n      });\n      return formattedData;\n    },\n\n    setProductKey(key) {\n      this.productID = key;\n      this.popupActive2 = true;\n    },\n\n    resetForm() {\n      firebase\n        .firestore()\n        .collection(\"RecentTopUp\")\n        .doc(this.productID)\n        .set({\n          balance: parseInt(this.form.amount),\n          email: this.form.email,\n          fullName: \"\",\n          productCode: this.productID,\n          subscriptions: [],\n        });\n      this.popupActive2 = false;\n      this.form.email = \"\";\n      this.form.phone = \"\";\n      this.form.amount = \"\";\n    },\n\n    topUpUser() {\n      firebase\n        .firestore()\n        .collection(\"AutoTopUp\")\n        .doc(this.productID)\n        .set({\n          balance: parseInt(this.form.amount),\n          email: this.form.email,\n          fullName: \"\",\n          productCode: this.productID,\n          subscriptions: [],\n        })\n        .then((_) => {\n          this.$http\n            .post(\"https://yodaboxotp-7kvy5dvszq-uc.a.run.app/notify\", {\n              amount: this.form.amount,\n              email: this.form.email,\n            })\n            .then((_) => {\n              this.$vs.notify({\n                title: \"Top Up Success\",\n                text: \"User account has been funded the user has been notified!\",\n                iconPack: \"feather\",\n                icon: \"icon-alert-circle\",\n                color: \"success\",\n              });\n\n              this.resetForm();\n            })\n            .catch((_) => {\n              this.$vs.notify({\n                title: \"Notification\",\n                text: \"Failed to top up user wallet\",\n                iconPack: \"feather\",\n                icon: \"icon-alert-circle\",\n                color: \"warning\",\n              });\n            });\n        });\n    },\n  },\n  created() {\n    const thisIns = this;\n    firebase\n      .firestore()\n      .collection(\"Users\")\n      .onSnapshot((querySnapshot) => {\n        thisIns.users = thisIns.formatData(querySnapshot.docs);\n      });\n  },\n  mounted() {\n    this.isMounted = true;\n  },\n};\n</script>\n\n<style lang=\"scss\">\n#data-list-list-view {\n  .vs-con-table {\n    .vs-table--header {\n      display: flex;\n      flex-wrap: wrap-reverse;\n      margin-left: 1.5rem;\n      margin-right: 1.5rem;\n      > span {\n        display: flex;\n        flex-grow: 1;\n      }\n\n      .vs-table--search {\n        padding-top: 0;\n\n        .vs-table--search-input {\n          padding: 0.9rem 2.5rem;\n          font-size: 1rem;\n\n          & + i {\n            left: 1rem;\n          }\n\n          &:focus + i {\n            left: 1rem;\n          }\n        }\n      }\n    }\n\n    .vs-table {\n      border-collapse: separate;\n      border-spacing: 0 1.3rem;\n      padding: 0 1rem;\n\n      tr {\n        box-shadow: 0 4px 20px 0 rgba(0, 0, 0, 0.05);\n        td {\n          padding: 20px;\n          &:first-child {\n            border-top-left-radius: 0.5rem;\n            border-bottom-left-radius: 0.5rem;\n          }\n          &:last-child {\n            border-top-right-radius: 0.5rem;\n            border-bottom-right-radius: 0.5rem;\n          }\n        }\n        td.td-check {\n          padding: 20px !important;\n        }\n      }\n    }\n\n    .vs-table--thead {\n      th {\n        padding-top: 0;\n        padding-bottom: 0;\n\n        .vs-table-text {\n          text-transform: uppercase;\n          font-weight: 600;\n        }\n      }\n      th.td-check {\n        padding: 0 15px !important;\n      }\n      tr {\n        background: none;\n        th.td-check {\n          padding: 0 15px !important;\n        }\n        box-shadow: none;\n      }\n    }\n\n    .vs-table--pagination {\n      justify-content: center;\n    }\n  }\n}\n</style>\n"]}]}