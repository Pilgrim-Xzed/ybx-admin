{"remainingRequest":"/home/xzed/Desktop/vuesaxadmin-32/vuesax-admin-v3.2/vuesax-vuejs-admin-template/vuesax-vuejs-admin-template/vuesax-admin-v3.2/node_modules/@vue/cli-plugin-babel/node_modules/babel-loader/lib/index.js!/home/xzed/Desktop/vuesaxadmin-32/vuesax-admin-v3.2/vuesax-vuejs-admin-template/vuesax-vuejs-admin-template/vuesax-admin-v3.2/node_modules/cache-loader/dist/cjs.js??ref--0-0!/home/xzed/Desktop/vuesaxadmin-32/vuesax-admin-v3.2/vuesax-vuejs-admin-template/vuesax-vuejs-admin-template/vuesax-admin-v3.2/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/xzed/Desktop/vuesaxadmin-32/vuesax-admin-v3.2/vuesax-vuejs-admin-template/vuesax-vuejs-admin-template/vuesax-admin-v3.2/src/views/ui-elements/data-list/list-view/DataListListView.vue?vue&type=script&lang=js&","dependencies":[{"path":"/home/xzed/Desktop/vuesaxadmin-32/vuesax-admin-v3.2/vuesax-vuejs-admin-template/vuesax-vuejs-admin-template/vuesax-admin-v3.2/src/views/ui-elements/data-list/list-view/DataListListView.vue","mtime":1626625578330},{"path":"/home/xzed/Desktop/vuesaxadmin-32/vuesax-admin-v3.2/vuesax-vuejs-admin-template/vuesax-vuejs-admin-template/vuesax-admin-v3.2/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/xzed/Desktop/vuesaxadmin-32/vuesax-admin-v3.2/vuesax-vuejs-admin-template/vuesax-vuejs-admin-template/vuesax-admin-v3.2/node_modules/@vue/cli-plugin-babel/node_modules/babel-loader/lib/index.js","mtime":315532800000},{"path":"/home/xzed/Desktop/vuesaxadmin-32/vuesax-admin-v3.2/vuesax-vuejs-admin-template/vuesax-vuejs-admin-template/vuesax-admin-v3.2/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/xzed/Desktop/vuesaxadmin-32/vuesax-admin-v3.2/vuesax-vuejs-admin-template/vuesax-vuejs-admin-template/vuesax-admin-v3.2/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["import \"core-js/modules/es6.regexp.constructor\";\nimport \"core-js/modules/es6.promise\";\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nimport AddNewDataSidebar from \"../AddNewDataSidebar.vue\";\nimport firebase from \"firebase/app\";\nimport \"firebase/firestore\";\nimport useVuelidate from \"@vuelidate/core\";\nimport { required, email, minLength, sameAs } from \"@vuelidate/validators\";\nexport function validName(name) {\n  var validNamePattern = new RegExp(\"^[a-zA-Z]+(?:[-'\\\\s][a-zA-Z]+)*$\");\n\n  if (validNamePattern.test(name)) {\n    return true;\n  }\n\n  return false;\n}\nexport default {\n  setup: function setup() {\n    return {\n      v$: useVuelidate()\n    };\n  },\n  components: {\n    AddNewDataSidebar: AddNewDataSidebar\n  },\n  data: function data() {\n    return {\n      selected: [],\n      users: [],\n      itemsPerPage: 50,\n      isMounted: false,\n      addNewDataSidebar: false,\n      form: {\n        email: \"\",\n        phone: \"\",\n        amount: \"\"\n      },\n      productID: \"\",\n      popupActive2: false,\n      popupActive3: false\n    };\n  },\n  validations: function validations() {\n    return {\n      form: {\n        email: {\n          required: required,\n          email: email\n        },\n        phone: {\n          required: required\n        },\n        amount: {\n          required: required\n        }\n      }\n    };\n  },\n  computed: {\n    currentPage: function currentPage() {\n      if (this.isMounted) {\n        return this.$refs.table.currentx;\n      }\n\n      return 0;\n    }\n  },\n  methods: {\n    formatData: function formatData(data) {\n      // formats data received from API\n      var formattedData = data.map(function (item) {\n        var fields = item.data().fields;\n        var obj = {};\n        obj[\"id\"] = item.id;\n        obj[\"productCode\"] = item.data().productCode;\n        return obj;\n      });\n      return formattedData;\n    },\n    setProductKey: function setProductKey(key) {\n      this.productID = key;\n      this.popupActive2 = true;\n    },\n    resetForm: function resetForm() {\n      firebase.firestore().collection(\"RecentTopUp\").doc(this.productID).set({\n        balance: parseInt(this.form.amount),\n        email: this.form.email,\n        fullName: \"\",\n        productCode: this.productID,\n        subscriptions: []\n      });\n      this.popupActive2 = false;\n      this.form.email = \"\";\n      this.form.phone = \"\";\n      this.form.amount = \"\";\n    },\n    topUpUser: function topUpUser() {\n      var _this = this;\n\n      firebase.firestore().collection(\"AutoTopUp\").doc(this.productID).set({\n        balance: parseInt(this.form.amount),\n        email: this.form.email,\n        fullName: \"\",\n        productCode: this.productID,\n        subscriptions: []\n      }).then(function (_) {\n        _this.$http.post(\"https://yodaboxotp-7kvy5dvszq-uc.a.run.app/notify\", {\n          amount: _this.form.amount,\n          email: _this.form.email\n        }).then(function (_) {\n          _this.$vs.notify({\n            title: \"Top Up Success\",\n            text: \"User account has been funded the user has been notified!\",\n            iconPack: \"feather\",\n            icon: \"icon-alert-circle\",\n            color: \"success\"\n          });\n\n          _this.resetForm();\n        }).catch(function (_) {\n          _this.$vs.notify({\n            title: \"Notification\",\n            text: \"Failed to top up user wallet\",\n            iconPack: \"feather\",\n            icon: \"icon-alert-circle\",\n            color: \"warning\"\n          });\n        });\n      });\n    }\n  },\n  created: function created() {\n    var thisIns = this;\n    firebase.firestore().collection(\"Users\").onSnapshot(function (querySnapshot) {\n      thisIns.users = thisIns.formatData(querySnapshot.docs);\n    });\n  },\n  mounted: function mounted() {\n    this.isMounted = true;\n  }\n};",{"version":3,"sources":["DataListListView.vue"],"names":[],"mappings":"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","sourcesContent":["< !-- =========================================================================================\n  File Name: DataListListView.vue\nDescription: Data List - List View\n----------------------------------------------------------------------------------------\n  Item Name: Vuesax Admin - VueJS Dashboard Admin Template\nAuthor: Pixinvent\nAuthor URL: http://www.themeforest.net/user/pixinvent\n========================================================================================== -->\n\n<template>\n  <div id=\"data-list-list-view\" class=\"data-list-container\">\n    <add-new-data-sidebar\n      :isSidebarActive=\"addNewDataSidebar\"\n      @closeSidebar=\"addNewDataSidebar = false\"\n    />\n\n    <vs-table\n      ref=\"table\"\n      multiple\n      v-model=\"selected\"\n      pagination\n      :max-items=\"itemsPerPage\"\n      search\n      :data=\"users\"\n    >\n      <template slot=\"thead\">\n        <vs-th sort-key=\"name\">Product ID</vs-th>\n\n        <vs-th sort-key=\"order_status\">Action</vs-th>\n      </template>\n\n      <template slot-scope=\"{ data }\">\n        <tbody>\n          <vs-tr v-for=\"(tr, indextr) in data\">\n            <vs-td>\n              <p class=\"product-name font-medium\">\n                {{ tr.productCode.toUpperCase() }}\n              </p>\n            </vs-td>\n\n            <vs-td>\n              <vs-button\n                color=\"primary\"\n                @click=\"setProductKey(tr.productCode)\"\n                type=\"border\"\n                >Fund</vs-button\n              >\n            </vs-td>\n          </vs-tr>\n        </tbody>\n      </template>\n    </vs-table>\n\n    <vs-popup\n      classContent=\"popup-example\"\n      title=\"Yoda Box Auto Top Up\"\n      :active.sync=\"popupActive2\"\n    >\n      <center>\n        <h4>User Product Code : {{ productID.toUpperCase() }}</h4>\n        <br />\n        <form @submit.prevent=\"topUpUser()\">\n          <vs-input\n            class=\"inputx mb-3\"\n            placeholder=\"Email Address\"\n            v-model=\"v$.form.email.$model\"\n            type=\"email\"\n          />\n          <div\n            class=\"input-errors\"\n            v-for=\"(error, index) of v$.form.email.$errors\"\n            :key=\"index\"\n          >\n            <div class=\"error-msg\">{{ error.$message }}</div>\n          </div>\n          <vs-input\n            class=\"inputx mb-3\"\n            placeholder=\"Phone\"\n            v-model=\"v$.form.phone.$model\"\n            type=\"text\"\n          />\n          <div\n            class=\"input-errors\"\n            v-for=\"(error, index) of v$.form.phone.$errors\"\n            :key=\"index\"\n          >\n            <div class=\"error-msg\">{{ error.$message }}</div>\n          </div>\n          <vs-input\n            class=\"inputx mb-3\"\n            placeholder=\"Amount\"\n            v-model=\"v$.form.amount.$model\"\n            type=\"number\"\n          />\n          <div\n            class=\"input-errors\"\n            v-for=\"(error, index) of v$.form.amount.$errors\"\n            :key=\"index\"\n          >\n            <div class=\"error-msg\">{{ error.$message }}</div>\n          </div>\n\n          <vs-button :disabled=\"v$.form.$invalid\" color=\"primary\" type=\"filled\"\n            >Top Up User Wallet</vs-button\n          >\n        </form>\n      </center>\n    </vs-popup>\n  </div>\n</template>\n\n<script>\nimport AddNewDataSidebar from \"../AddNewDataSidebar.vue\";\nimport firebase from \"firebase/app\";\nimport \"firebase/firestore\";\n\nimport useVuelidate from \"@vuelidate/core\";\nimport { required, email, minLength, sameAs } from \"@vuelidate/validators\";\n\nexport function validName(name) {\n  let validNamePattern = new RegExp(\"^[a-zA-Z]+(?:[-'\\\\s][a-zA-Z]+)*$\");\n  if (validNamePattern.test(name)) {\n    return true;\n  }\n  return false;\n}\n\nexport default {\n  setup() {\n    return { v$: useVuelidate() };\n  },\n\n  components: {\n    AddNewDataSidebar,\n  },\n  data() {\n    return {\n      selected: [],\n      users: [],\n      itemsPerPage: 50,\n      isMounted: false,\n      addNewDataSidebar: false,\n      form: {\n        email: \"\",\n        phone: \"\",\n        amount: \"\",\n      },\n      productID: \"\",\n      popupActive2: false,\n      popupActive3: false,\n    };\n  },\n  validations() {\n    return {\n      form: {\n        email: { required, email },\n        phone: { required },\n        amount: { required },\n      },\n    };\n  },\n  computed: {\n    currentPage() {\n      if (this.isMounted) {\n        return this.$refs.table.currentx;\n      }\n      return 0;\n    },\n  },\n  methods: {\n    formatData(data) {\n      // formats data received from API\n      let formattedData = data.map((item) => {\n        const fields = item.data().fields;\n        let obj = {};\n        obj[\"id\"] = item.id;\n        obj[\"productCode\"] = item.data().productCode;\n\n        return obj;\n      });\n      return formattedData;\n    },\n\n    setProductKey(key) {\n      this.productID = key;\n      this.popupActive2 = true;\n    },\n\n    resetForm() {\n      firebase\n        .firestore()\n        .collection(\"RecentTopUp\")\n        .doc(this.productID)\n        .set({\n          balance: parseInt(this.form.amount),\n          email: this.form.email,\n          fullName: \"\",\n          productCode: this.productID,\n          subscriptions: [],\n        });\n      this.popupActive2 = false;\n      this.form.email = \"\";\n      this.form.phone = \"\";\n      this.form.amount = \"\";\n    },\n\n    topUpUser() {\n      firebase\n        .firestore()\n        .collection(\"AutoTopUp\")\n        .doc(this.productID)\n        .set({\n          balance: parseInt(this.form.amount),\n          email: this.form.email,\n          fullName: \"\",\n          productCode: this.productID,\n          subscriptions: [],\n        })\n        .then((_) => {\n          this.$http\n            .post(\"https://yodaboxotp-7kvy5dvszq-uc.a.run.app/notify\", {\n              amount: this.form.amount,\n              email: this.form.email,\n            })\n            .then((_) => {\n              this.$vs.notify({\n                title: \"Top Up Success\",\n                text: \"User account has been funded the user has been notified!\",\n                iconPack: \"feather\",\n                icon: \"icon-alert-circle\",\n                color: \"success\",\n              });\n\n              this.resetForm();\n            })\n            .catch((_) => {\n              this.$vs.notify({\n                title: \"Notification\",\n                text: \"Failed to top up user wallet\",\n                iconPack: \"feather\",\n                icon: \"icon-alert-circle\",\n                color: \"warning\",\n              });\n            });\n        });\n    },\n  },\n  created() {\n    const thisIns = this;\n    firebase\n      .firestore()\n      .collection(\"Users\")\n      .onSnapshot((querySnapshot) => {\n        thisIns.users = thisIns.formatData(querySnapshot.docs);\n      });\n  },\n  mounted() {\n    this.isMounted = true;\n  },\n};\n</script>\n\n<style lang=\"scss\">\n#data-list-list-view {\n  .vs-con-table {\n    .vs-table--header {\n      display: flex;\n      flex-wrap: wrap-reverse;\n      margin-left: 1.5rem;\n      margin-right: 1.5rem;\n      > span {\n        display: flex;\n        flex-grow: 1;\n      }\n\n      .vs-table--search {\n        padding-top: 0;\n\n        .vs-table--search-input {\n          padding: 0.9rem 2.5rem;\n          font-size: 1rem;\n\n          & + i {\n            left: 1rem;\n          }\n\n          &:focus + i {\n            left: 1rem;\n          }\n        }\n      }\n    }\n\n    .vs-table {\n      border-collapse: separate;\n      border-spacing: 0 1.3rem;\n      padding: 0 1rem;\n\n      tr {\n        box-shadow: 0 4px 20px 0 rgba(0, 0, 0, 0.05);\n        td {\n          padding: 20px;\n          &:first-child {\n            border-top-left-radius: 0.5rem;\n            border-bottom-left-radius: 0.5rem;\n          }\n          &:last-child {\n            border-top-right-radius: 0.5rem;\n            border-bottom-right-radius: 0.5rem;\n          }\n        }\n        td.td-check {\n          padding: 20px !important;\n        }\n      }\n    }\n\n    .vs-table--thead {\n      th {\n        padding-top: 0;\n        padding-bottom: 0;\n\n        .vs-table-text {\n          text-transform: uppercase;\n          font-weight: 600;\n        }\n      }\n      th.td-check {\n        padding: 0 15px !important;\n      }\n      tr {\n        background: none;\n        th.td-check {\n          padding: 0 15px !important;\n        }\n        box-shadow: none;\n      }\n    }\n\n    .vs-table--pagination {\n      justify-content: center;\n    }\n  }\n}\n</style>\n"],"sourceRoot":"src/views/ui-elements/data-list/list-view"}]}